{"version":3,"sources":["model/database.js","model/model.js","components/FormContainer.js","components/Message.js","components/MessagesContainer.js","components/ChatContainer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getMessages","setMessages","a","collection","orderBy","onSnapshot","querySnapshot","chatHistory","forEach","doc","push","id","data","console","log","Error","saveMessages","message","set","FormContainer","loadingMessages","newMessage","notification","onChange","sendMessage","useState","disableSubmit","setdisableSubmit","useEffect","document","querySelector","color","selected","className","onSubmit","htmlFor","type","name","value","nickname","cols","rows","onKeyPress","e","which","keyCode","shiftKey","preventDefault","disabled","Message","MessagesContainer","messages","messagesContainer","scrollTo","scrollHeight","map","ChatContainer","setloadingMessages","setNotification","localStorage","getItem","setNewMessage","loadMessages","setTimeout","date","Date","target","setItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21122826.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n\tapiKey: \"AIzaSyB3eTixPwzFobVTrmom_vQpOnP3wZ5hkuA\",\r\n\tauthDomain: \"react-chat-9e283.firebaseapp.com\",\r\n\tdatabaseURL: \"https://react-chat-9e283-default-rtdb.firebaseio.com\",\r\n\tprojectId: \"react-chat-9e283\",\r\n\tstorageBucket: \"react-chat-9e283.appspot.com\",\r\n\tmessagingSenderId: \"178991264140\",\r\n\tappId: \"1:178991264140:web:bdfebce71e614ef73626a9\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\n","import { db } from \"./database.js\";\r\n\r\nasync function getMessages(setMessages) {\r\n\ttry {\r\n\t\tdb.collection(\"messages\")\r\n\t\t\t.orderBy(\"date\", \"asc\")\r\n\t\t\t.onSnapshot((querySnapshot) => {\r\n\t\t\t\tconst chatHistory = [];\r\n\r\n\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\tchatHistory.push({ id: doc.id, ...doc.data() });\r\n\t\t\t\t});\r\n\t\t\t\tsetMessages(chatHistory);\r\n\t\t\t});\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\tthrow new Error(\"Los mensajes no se pudieron cargar\");\r\n\t}\r\n}\r\n\r\nasync function saveMessages(message) {\r\n\ttry {\r\n\t\tawait db.collection(\"messages\").doc().set(message);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\tthrow new Error(\"El mensaje no se pudo enviar.\");\r\n\t}\r\n}\r\n\r\nexport { getMessages, saveMessages };\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./FormContainer.scss\";\r\n\r\nexport default function FormContainer({ loadingMessages, newMessage, notification, onChange, sendMessage }) {\r\n\tconst [disableSubmit, setdisableSubmit] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.querySelector(`.colorPicker option[value=${newMessage.color}]`).selected = true;\r\n\t}, [newMessage.color]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetdisableSubmit(loadingMessages);\r\n\t}, [loadingMessages]);\r\n\r\n\tconst onKeyPress = (e) => {\r\n\t\tconst keyCode = e.which || e.keyCode;\r\n\r\n\t\tif (keyCode === 13 && !e.shiftKey) {\r\n\t\t\te.preventDefault();\r\n\t\t\tsendMessage();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form className=\"inputContainer\" onSubmit={sendMessage}>\r\n\t\t\t\t<fieldset className=\"transmiterData\">\r\n\t\t\t\t\t<div className=\"nicknameDiv\">\r\n\t\t\t\t\t\t<label htmlFor=\"nickname\">Nickname</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"nicknameInput\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\t\tname=\"nickname\"\r\n\t\t\t\t\t\t\tvalue={newMessage.nickname}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<select className=\"colorPicker\" name=\"color\" id=\"color\" onChange={onChange}>\r\n\t\t\t\t\t\t<option value=\"white\">âšª</option>\r\n\t\t\t\t\t\t<option value=\"red\">ðŸ”´</option>\r\n\t\t\t\t\t\t<option value=\"green\">ðŸŸ¢</option>\r\n\t\t\t\t\t\t<option value=\"orange\">ðŸŸ </option>\r\n\t\t\t\t\t\t<option value=\"yellow\">ðŸŸ¡</option>\r\n\t\t\t\t\t\t<option value=\"blue\">ðŸ”µ</option>\r\n\t\t\t\t\t\t<option value=\"blueviolet\">ðŸŸ£</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<label htmlFor=\"message\"> Message </label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"messageArea\"\r\n\t\t\t\t\t\tcols=\"30\"\r\n\t\t\t\t\t\trows=\"6\"\r\n\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\tvalue={newMessage.message}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tonKeyPress={onKeyPress}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<button disabled={disableSubmit}> ENVIAR </button>\r\n\t\t\t\t<p className=\"notification\">{notification}</p>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./Messages.scss\";\r\n\r\nexport default function Message({ message }) {\r\n\treturn (\r\n\t\t<div className=\"message\">\r\n\t\t\t<label className={message.color}>{message.nickname}</label>\r\n\t\t\t<p>{message.message}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport \"./MessagesContainer.scss\";\r\n\r\nexport default function MessagesContainer({ loadingMessages, messages }) {\r\n\tuseEffect(() => {\r\n\t\tconst messagesContainer = document.querySelector(\".messagesContainer\");\r\n\t\tmessagesContainer.scrollTo(0, messagesContainer.scrollHeight);\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<div className=\"messagesContainer\">\r\n\t\t\t{loadingMessages && <h3>Cargando...</h3>}\r\n\t\t\t{messages && messages.map((message) => <Message message={message} key={message.id} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { getMessages, saveMessages } from \"../model/model.js\";\r\nimport FormContainer from \"./FormContainer.js\";\r\nimport MessagesContainer from \"./MessagesContainer\";\r\nimport \"./ChatContainer.scss\";\r\n\r\nexport default function ChatContainer() {\r\n\tconst [loadingMessages, setloadingMessages] = useState(true);\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [notification, setNotification] = useState(\"\");\r\n\tconst [newMessage, setNewMessage] = useState({\r\n\t\tnickname: localStorage.getItem(\"nickname\" || \"\"),\r\n\t\tcolor: localStorage.getItem(\"color\" || \"white\"),\r\n\t\tmessage: \"\",\r\n\t});\r\n\r\n\tconst loadMessages = async () => {\r\n\t\ttry {\r\n\t\t\tawait getMessages(setMessages);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetloadingMessages(false);\r\n\t\t\t}, 500);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetNotification(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tloadMessages();\r\n\t}, []);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetNewMessage({ ...newMessage, [name]: value });\r\n\r\n\t\tif (name === \"nickname\") localStorage.setItem(\"nickname\", value);\r\n\t\tif (name === \"color\") localStorage.setItem(\"color\", value);\r\n\t};\r\n\r\n\tconst sendMessage = async (e) => {\r\n\t\tif (e) e.preventDefault();\r\n\r\n\t\tif (loadingMessages) return;\r\n\r\n\t\tif (!newMessage.message) return setNotification(\"No ha escrito ningÃºn mensaje.\");\r\n\t\telse setNotification(\"\");\r\n\r\n\t\tconst message = {\r\n\t\t\tdate: new Date(),\r\n\t\t\tnickname: newMessage.nickname,\r\n\t\t\tcolor: newMessage.color,\r\n\t\t\tmessage: newMessage.message,\r\n\t\t};\r\n\r\n\t\tsetNewMessage({ ...newMessage, message: \"\" });\r\n\r\n\t\ttry {\r\n\t\t\tawait saveMessages(message);\r\n\t\t\tsetNotification(\"Mensaje enviado\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetNotification(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={\"container chatContainer\"}>\r\n\t\t\t<h2> CHAT </h2>\r\n\t\t\t<section className=\"chatSection\">\r\n\t\t\t\t<FormContainer\r\n\t\t\t\t\tloadingMessages={loadingMessages}\r\n\t\t\t\t\tnewMessage={newMessage}\r\n\t\t\t\t\tnotification={notification}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tsendMessage={sendMessage}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<MessagesContainer loadingMessages={loadingMessages} messages={messages} />\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ChatContainer from \"./components/ChatContainer.js\";\r\nimport \"./styles/App.css\";\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<ChatContainer />\r\n\t\t</div>\r\n\t);\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./model/database.js\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}